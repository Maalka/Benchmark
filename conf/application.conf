# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
# TODO Generate a secret for your app using `sbt playGenerateSecret` and pass it via -Dplay.crypto.secret
# play.http.secret.key="changeme" # -> will crash app on startup in prod mode
# Uncomment this line if you want to set secret via environment vars
play.crypto.secret=${?APPLICATION_SECRET}

# The application languages
# ~~~~~
play.i18n.langs=["en"]

# Application loader class
# ~~~~~
//play.application.loader="AppLoader"

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.user=sa
# db.default.password=""

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
}
play.modules {
  enabled += "play.filters.cors.CORSModule"
}

play.server.http.idleTimeout = 60s
play.server.akka.requestTimeout = 40s

google.analytics = "" // add google key here

play.filters.enabled += "filters.LoggingFilter"
play.filters.enabled += "play.filters.cors.CORSFilter"

play.filters.disabled+=play.filters.csrf.CSRFFilter

play.filters.cors {
  allowedOrigins = null
  allowedHttpMethods = null
  allowedHttpHeaders = null
  preflightMaxAge = 3 days
}

play.filters.headers.contentSecurityPolicy = null

baseline = {
  office = "officeLookup.json"
  canadaOffice = "canadaOfficeLookup.json"
  canadaHospital = "canadaHospitalLookup.json"
  canadaK12 = "canadaK12Lookup.json"
  canadaSupermarket = "canadaSupermarketLookup.json"
  worshipCenter = "worshipLookup.json"
  wastewaterCenter = "wastewaterLookup.json"
  warehouse = "warehouseLookup.json"
  supermarket = "supermarketLookup.json"
  seniorCare = "seniorCareLookup.json"
  retail = "retailLookup.json"
  residenceHall = "residenceHallLookup.json"
  multiFamily = "multiFamilyLookup.json"
  canadaMedicalOffice = "canadaMedicalOfficeLookup.json"
  medicalOffice = "medicalOfficeLookup.json"
  canadaK12School = "canadaK12Lookup.json"
  K12School = "k12Lookup.json"
  hotel = "hotelLookup.json"
  hospital = "hospitalLookup.json"
  canadaHospital = "canadaHospitalLookup.json"
  datacenter = "dataCenterLookup.json"
}

benchmark.volume = "/tmp/"
